{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-business-entity/add-business-entity.component.css","webpack:///./src/app/components/add-business-entity/add-business-entity.component.html","webpack:///./src/app/components/add-business-entity/add-business-entity.component.ts","webpack:///./src/app/components/base/base.component.ts","webpack:///./src/app/components/edit-business-entity/edit-business-entity.component.css","webpack:///./src/app/components/edit-business-entity/edit-business-entity.component.html","webpack:///./src/app/components/edit-business-entity/edit-business-entity.component.ts","webpack:///./src/app/components/list-business-entity/list-business-entity.component.css","webpack:///./src/app/components/list-business-entity/list-business-entity.component.html","webpack:///./src/app/components/list-business-entity/list-business-entity.component.ts","webpack:///./src/app/components/markup-plan/add-markup-plan/add-markup-plan.component.css","webpack:///./src/app/components/markup-plan/add-markup-plan/add-markup-plan.component.html","webpack:///./src/app/components/markup-plan/add-markup-plan/add-markup-plan.component.ts","webpack:///./src/app/components/markup-plan/edit-markup-plan/edit-markup-plan.component.css","webpack:///./src/app/components/markup-plan/edit-markup-plan/edit-markup-plan.component.html","webpack:///./src/app/components/markup-plan/edit-markup-plan/edit-markup-plan.component.ts","webpack:///./src/app/components/markup-plan/list-markup-plan/list-markup-plan.component.css","webpack:///./src/app/components/markup-plan/list-markup-plan/list-markup-plan.component.html","webpack:///./src/app/components/markup-plan/list-markup-plan/list-markup-plan.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/counter/counter.component.html","webpack:///./src/app/counter/counter.component.ts","webpack:///./src/app/entities/base-request-model.ts","webpack:///./src/app/entities/entity.ts","webpack:///./src/app/fetch-data/fetch-data.component.html","webpack:///./src/app/fetch-data/fetch-data.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav-menu/nav-menu.component.css","webpack:///./src/app/nav-menu/nav-menu.component.html","webpack:///./src/app/nav-menu/nav-menu.component.ts","webpack:///./src/app/services/base.service.ts","webpack:///./src/app/services/business-entity.service.ts","webpack:///./src/app/services/markup-plan.service.ts","webpack:///./src/app/services/url.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (max-width: 767px) {\\r\\n  /* On small screens, the nav menu spans the full width of the screen. Leave a space for it. */\\r\\n  .body-content {\\r\\n    padding-top: 50px;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"\\r\\n  <app-nav-menu></app-nav-menu>\\r\\n <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n </div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { AddBusinessEntityComponent } from './components/add-business-entity/add-business-entity.component';\r\nimport { EditBusinessEntityComponent } from './components/edit-business-entity/edit-business-entity.component';\r\nimport { ListBusinessEntityComponent } from './components/list-business-entity/list-business-entity.component';\r\nimport { AddMarkupPlanComponent } from './components/markup-plan/add-markup-plan/add-markup-plan.component';\r\nimport { EditMarkupPlanComponent } from './components/markup-plan/edit-markup-plan/edit-markup-plan.component';\r\nimport { ListMarkupPlanComponent } from './components/markup-plan/list-markup-plan/list-markup-plan.component';\r\nimport { UrlService } from './services/url.service';\r\nimport { BaseService } from './services/base.service';\r\nimport { MarkupPlanService } from './services/markup-plan.service';\r\nimport { BusinessEntityService } from './services/business-entity.service';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavMenuComponent,\r\n    HomeComponent,\r\n    CounterComponent,\r\n    FetchDataComponent,\r\n    AddBusinessEntityComponent,\r\n    EditBusinessEntityComponent,\r\n    ListBusinessEntityComponent,\r\n    AddMarkupPlanComponent,\r\n    EditMarkupPlanComponent,\r\n    ListMarkupPlanComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent, pathMatch: 'full' },\r\n      { path: 'counter', component: CounterComponent },\r\n      { path: 'fetch-data', component: FetchDataComponent },\r\n      {path:'add-business-entity',component:AddBusinessEntityComponent},\r\n      {path:'edit-business-entity/:id',component:EditBusinessEntityComponent},\r\n      {path:'list-business-entity',component:ListBusinessEntityComponent},\r\n      {path:'add-markup-plan',component:AddMarkupPlanComponent},\r\n      {path:'edit-markup-plan/:id',component:EditMarkupPlanComponent},\r\n      {path:'list-markup-plan',component:ListMarkupPlanComponent}\r\n    ])\r\n  ],\r\n  providers: [\r\n    UrlService,\r\n    BaseService,\r\n    MarkupPlanService,\r\n    BusinessEntityService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\\r\\n          <div><h4>Add New Agent</h4></div>\\r\\n    <div class=\\\"container\\\" >\\r\\n      <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"saveAgent()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\" id=\\\"errorDiv\\\">\\r\\n                <h4 class=\\\"text-danger mb-4\\\" id=\\\"errorMessage\\\"></h4>\\r\\n              </div>\\r\\n              <!--Left Col-->\\r\\n              <div class=\\\" col-md-6\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">ID/Code</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"code\\\" formControlName=\\\"code\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Name</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" name=\\\"name\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Markup Plan</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <select id=\\\"markupPlanId\\\" formControlName=\\\"markupPlanId\\\" class=\\\"form-control\\\">\\r\\n                      <option value=\\\"\\\"></option>\\r\\n                      <option *ngFor=\\\"let plan of markupPlans\\\" value=\\\"{{plan.id}}\\\">{{plan.markupPlanName}}</option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Email</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"email\\\" formControlName=\\\"email\\\"  class=\\\"form-control\\\" name=\\\"email\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Mobile</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"mobile\\\"  class=\\\"form-control\\\" name=\\\"mobile\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Phone</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\"  class=\\\"form-control\\\" name=\\\"phone\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Login Url</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"loginUrl\\\"  name=\\\"loginUrl\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">city</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\"formControlName=\\\"city\\\"  class=\\\"form-control\\\" name=\\\"city\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">State</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"state\\\"  class=\\\"form-control\\\" name=\\\"state\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Country</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"country\\\"  class=\\\"form-control\\\" name=\\\"country\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Zip/Postal Code</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"zip\\\"  class=\\\"form-control\\\" name=\\\"zip\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Logo</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"file\\\" formControlName=\\\"logo\\\" id=\\\"logo\\\"  class=\\\"form-control\\\" name=\\\"logo\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Contact Person</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"contactPerson\\\"  class=\\\"form-control\\\" name=\\\"contactPerson\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Referred By</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"referredBy\\\"  class=\\\"form-control\\\" name=\\\"referredBy\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">Balance</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"number\\\" formControlName=\\\"balance\\\"  class=\\\"form-control\\\" name=\\\"balance\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <hr />\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">SMTP Server</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"smtpServer\\\"  class=\\\"form-control\\\" name=\\\"smtpServer\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">SMTP Port</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"number\\\" formControlName=\\\"smtpPort\\\"   class=\\\"form-control\\\" name=\\\"smtpPort\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">SMTP Username</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"smtpUsername\\\"  class=\\\"form-control\\\" name=\\\"smtpUsername\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <label class=\\\"col-3\\\">SMTP Password</label>\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"smtpPassword\\\"  class=\\\"form-control\\\" name=\\\"smtpPassword\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <!--Right Col-->\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <label style=\\\"text:bold;\\\">Agent Type:</label>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col\\\">\\r\\n                    <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"agentType\\\" id=\\\"inlineRadio1\\\" formControlName=\\\"agentType\\\" value=\\\"B2B\\\">\\r\\n                        <label class=\\\"form-check-label\\\">B2B</label>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"form-check form-check-inline\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"agentType\\\" id=\\\"inlineRadio2\\\" formControlName=\\\"agentType\\\" value=\\\"B2C\\\">\\r\\n                        <label class=\\\"form-check-label\\\">B2C</label>\\r\\n                        </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <label>Status:</label>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"col \\\">\\r\\n                    \\r\\n                      <div class=\\\"form-check form-check-inline\\\">\\r\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio1\\\" formControlName=\\\"status\\\" value=\\\"1\\\">\\r\\n                          <label class=\\\"form-check-label\\\">New</label>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"form-check form-check-inline\\\">\\r\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio2\\\" formControlName=\\\"status\\\" value=\\\"2\\\">\\r\\n                          <label class=\\\"form-check-label\\\">Active</label>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"form-check form-check-inline\\\">\\r\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio3\\\" formControlName=\\\"status\\\" value=\\\"3\\\">\\r\\n                          <label class=\\\"form-check-label\\\">Inactive</label>\\r\\n                          </div>\\r\\n                          <div class=\\\"form-check form-check-inline\\\">\\r\\n                              <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio4\\\" formControlName=\\\"status\\\" value=\\\"4\\\">\\r\\n                              <label class=\\\"form-check-label\\\">Blocked</label>\\r\\n                          </div>\\r\\n              \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <input type=\\\"submit\\\"  class=\\\"btn btn-success\\\" value=\\\"Save\\\">\\r\\n                <button type=\\\"reset\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-danger\\\">Reset</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { Entity } from 'src/app/entities/entity';\nimport { BusinessEntityService } from 'src/app/services/business-entity.service';\nimport { BaseRequestModel } from 'src/app/entities/base-request-model';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\n\n@Component({\n  selector: 'app-add-business-entity',\n  templateUrl: './add-business-entity.component.html',\n  styleUrls: ['./add-business-entity.component.css']\n})\nexport class AddBusinessEntityComponent extends BaseComponent<any> implements OnInit {\n  reset() {\n   this.model=new Entity();\n  }\n  agentForm:FormGroup\nmarkupPlans:any[]\n  constructor(public service:BusinessEntityService,private formBuilder:FormBuilder,private router:Router,private markupPlanService:MarkupPlanService) {\n    super(service)\n   }\n\n  ngOnInit() {\n    this.agentForm=this.formBuilder.group({\n      agentType: [''],\n      balance:[''],\n      city: [''],\n      code: [''],\n      contactPerson:[''],\n      country: [''],\n      currentBalance:0,\n      deleted: false,\n      email:[''],\n      loginUrl: [''],\n      logo: [''],\n      markupPlanId:1,\n      mobile:[''],\n      name: [''],\n      phone:[''],\n      referredBy: [''],\n      securityCode: [''],\n      smtpPassword:[''],\n      smtpPort: 0,\n      smtpServer:[''],\n      smtpUsername: [''],\n      state: [''],\n      status: 2,\n      street:[''],\n      zip:['']\n      \n      });\n    this.loadMarkupPlans()\n  }\n  loadMarkupPlans(){\n    var r=new BaseRequestModel();\n    r.page=-1;\n    r.orderBy=\"updatedOnUtc\"\n    this.markupPlanService.search(r).subscribe(res=>{\n             this.markupPlans=res;\n             console.log(res)\n    });\n  }\n\n  saveAgent(){\n    this.service.save(this.agentForm.value).subscribe(res=>{\n      this.router.navigate(['list-business-entity'])\n    },error=>{\n      console.log(error);\n    })\n  }\n  }\n\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from 'src/app/services/base.service';\r\nimport { Entity } from 'src/app/entities/entity';\r\nimport { BaseRequestModel } from 'src/app/entities/base-request-model';\r\n\r\nexport abstract class BaseComponent<T extends Entity>{\r\n  model:T\r\n  \r\nconstructor(public service:BaseService<T>){\r\nthis.model=this.createInstance(Entity) as T;\r\nthis.searchRequest=new BaseRequestModel();\r\nthis.searchRequest.page=1\r\nthis.searchRequest.orderBy=\"updatedOnUtc\"\r\nthis.searchRequest.isAscending=false;\r\n}\r\n\r\nsave(){\r\n  this.service.save(this.model).subscribe(res=>{\r\n    this.reset();\r\n    console.log('success',res);\r\n  },error=>{\r\n    console.log(error)\r\n  });\r\n}\r\n\r\nabstract reset();\r\n\r\ncreateInstance<Entity>(c:new()=>Entity):Entity{\r\n  return new c();\r\n}\r\n \r\n edit(){\r\n  this.service.edit(this.model).subscribe(res=>{\r\n    this.reset();\r\n    console.log('success');\r\n  },error=>{\r\n    console.log(error)\r\n  });\r\n}\r\n\r\ndelete(id:number){\r\n  var result=confirm(\"Are You sure to delete this\");\r\n  if(result){\r\n    this.service.delete(id).subscribe(res=>{\r\n      this.search();\r\n    },error=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n    }\r\n\r\n\r\n\r\n\r\nmodels:T[]\r\nsearchRequest:BaseRequestModel\r\ntotalCount:number=0\r\n\r\nsearchForPaging(){\r\n  var r=new BaseRequestModel();\r\n  r.page=-1;\r\n  r.orderBy=\"updatedOnUtc\";\r\n  this.service.search(r).subscribe(res=>{\r\n  \r\nfor(var i = 0; i < res.length; ++i){\r\n    \r\n      this.totalCount++;\r\n}\r\n    \r\n    this.searchRequest.totalPage = Math.ceil(this.totalCount / 10);\r\n   \r\n  \r\n  },error=>{\r\n    console.log(error)\r\n  })\r\n\r\n}\r\n\r\n\r\nsearch(){\r\n  this.service.search(this.searchRequest).subscribe(res=>{\r\n    \r\n    this.models=res;\r\n  \r\n    if (this.models.length === 0) {\r\n      console.log('No search result found');\r\n    }\r\n    console.log(this.models);\r\n  },error=>{\r\n    console.log(error)\r\n  })\r\n\r\n}\r\n\r\nsort(property:string){\r\n  this.searchRequest.orderBy=property;\r\n  this.searchRequest.isAscending=!this.searchRequest.isAscending  \r\n  this.search();\r\n}\r\n\r\nprevious(){\r\nif(this.searchRequest.page>1){\r\nthis.searchRequest.page=this.searchRequest.page-1; \r\nthis.search();\r\n}\r\n}\r\n\r\nnext(){\r\n  if(this.searchRequest.totalPage-this.searchRequest.page>0){\r\n    this.searchRequest.page=this.searchRequest.page+1;\r\n    this.search();\r\n  }\r\n  \r\n\r\n}\r\n\r\ngoto(page: number): void {\r\n  this.searchRequest.page = page;\r\n  this.search();\r\n}\r\n}","module.exports = \"\"","module.exports = \"<div><h4>Edit Agent</h4></div>\\n          \\n    <div class=\\\"container\\\">\\n          <form >\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12\\\" id=\\\"errorDiv\\\">\\n                <h4 class=\\\"text-danger mb-4\\\" id=\\\"errorMessage\\\"></h4>\\n              </div>\\n              <!--Left Col-->\\n              <div class=\\\" col-md-6\\\">\\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">ID/Code</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.code\\\"   name=\\\"code\\\"/>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Name</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\"  class=\\\"form-control\\\" name=\\\"name\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Markup Plan</label>\\n                  <div class=\\\"col\\\">\\n                    <select id=\\\"markupPlanId\\\"  [(ngModel)]=\\\"model.markupPlanId\\\" name=\\\"markupPlanId\\\"  class=\\\"form-control\\\">\\n                      <option value=\\\"\\\"></option>\\n                      <option *ngFor=\\\"let plan of markupPlans\\\" value=\\\"{{plan.id}}\\\">{{plan.markupPlanName}}</option>\\n                    </select>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Email</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"email\\\"  [(ngModel)]=\\\"model.email\\\" class=\\\"form-control\\\" name=\\\"email\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Mobile</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.mobile\\\" class=\\\"form-control\\\" name=\\\"mobile\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Phone</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.phone\\\" class=\\\"form-control\\\" name=\\\"phone\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Login Url</label>\\n                  <div class=\\\"col\\\">\\n                    <input class=\\\"form-control\\\"  [(ngModel)]=\\\"model.loginUrl\\\" name=\\\"loginUrl\\\">\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">city</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.city\\\" class=\\\"form-control\\\" name=\\\"city\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">State</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.state\\\" class=\\\"form-control\\\" name=\\\"state\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Country</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.country\\\" class=\\\"form-control\\\" name=\\\"country\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Zip/Postal Code</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"model.zip\\\" class=\\\"form-control\\\" name=\\\"zip\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Logo</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"file\\\" id=\\\"logo\\\" [(ngModel)]=\\\"model.logo\\\" class=\\\"form-control\\\" name=\\\"logo\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Contact Person</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.contactPerson\\\" class=\\\"form-control\\\" name=\\\"contactPerson\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Referred By</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.referredBy\\\" class=\\\"form-control\\\" name=\\\"referredBy\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">Balance</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"model.balance\\\" class=\\\"form-control\\\" name=\\\"balance\\\" />\\n                  </div>\\n                </div>\\n    \\n                <hr />\\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">SMTP Server</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.smtpServer\\\" class=\\\"form-control\\\" name=\\\"smtpServer\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">SMTP Port</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"number\\\"  [(ngModel)]=\\\"model.smtpPort\\\" class=\\\"form-control\\\" name=\\\"smtpPort\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">SMTP Username</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.smtpUsername\\\" class=\\\"form-control\\\" name=\\\"smtpUsername\\\" />\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <label class=\\\"col-3\\\">SMTP Password</label>\\n                  <div class=\\\"col\\\">\\n                    <input type=\\\"text\\\"  [(ngModel)]=\\\"model.smtpPassword\\\" class=\\\"form-control\\\" name=\\\"smtpPassword\\\" />\\n                  </div>\\n                </div>\\n    \\n              </div>\\n    \\n              <!--Right Col-->\\n              <div class=\\\"col-md-6\\\">\\n    \\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <label style=\\\"text:bold;\\\">Agent Type:</label>\\n                  </div>\\n    \\n                  <div class=\\\"col\\\">\\n                    <div class=\\\"form-check form-check-inline\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"agentType\\\" id=\\\"inlineRadio1\\\" [(ngModel)]=\\\"model.agentType\\\"  value=\\\"B2B\\\">\\n                        <label class=\\\"form-check-label\\\">B2B</label>\\n                        </div>\\n                        \\n                        <div class=\\\"form-check form-check-inline\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"agentType\\\" id=\\\"inlineRadio2\\\" [(ngModel)]=\\\"model.agentType\\\" value=\\\"B2C\\\">\\n                        <label class=\\\"form-check-label\\\">B2C</label>\\n                        </div>\\n                  </div>\\n                </div>\\n    \\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-12\\\">\\n                    <label>Status:</label>\\n                  </div>\\n    \\n                  <div class=\\\"col \\\">\\n                    \\n                      <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio1\\\" [(ngModel)]=\\\"model.status\\\" value=\\\"1\\\">\\n                          <label class=\\\"form-check-label\\\">New</label>\\n                          </div>\\n                          \\n                          <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio2\\\" [(ngModel)]=\\\"model.status\\\"  value=\\\"2\\\">\\n                          <label class=\\\"form-check-label\\\">Active</label>\\n                          </div>\\n                          \\n                          <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio3\\\" [(ngModel)]=\\\"model.status\\\"  value=\\\"3\\\">\\n                          <label class=\\\"form-check-label\\\">Inactive</label>\\n                          </div>\\n                          <div class=\\\"form-check form-check-inline\\\">\\n                              <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"status\\\" id=\\\"inlineRadio4\\\" [(ngModel)]=\\\"model.status\\\"  value=\\\"4\\\">\\n                              <label class=\\\"form-check-label\\\">Blocked</label>\\n                          </div>\\n                \\n                   \\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <input type=\\\"hidden\\\"  [(ngModel)]=\\\"model.id\\\" class=\\\"form-control\\\" name=\\\"id\\\">\\n                <button type=\\\"submit\\\" (click)=\\\"edit()\\\"  class=\\\"btn btn-success\\\" >Update</button>\\n                <button type=\\\"reset\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-danger\\\">Reset</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n     \\n    \"","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { Entity } from 'src/app/entities/entity';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { BusinessEntityService } from 'src/app/services/business-entity.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\nimport { BaseRequestModel } from 'src/app/entities/base-request-model';\n\n@Component({\n  selector: 'app-edit-business-entity',\n  templateUrl: './edit-business-entity.component.html',\n  styleUrls: ['./edit-business-entity.component.css']\n})\nexport class EditBusinessEntityComponent extends BaseComponent<any> implements OnInit {\n\n  reset() {\n    this.model=new Entity();\n   }\n   agentForm:FormGroup\n markupPlans:any[]\n   constructor(public service:BusinessEntityService,private formBuilder:FormBuilder,private router:Router,\n    private markupPlanService:MarkupPlanService,private activatedRoute:ActivatedRoute) {\n     super(service)\n    }\n \n   ngOnInit() {\n    var id=this.activatedRoute.snapshot.params.id;\n    this.service.get(id).subscribe(res=>{\n      this.model=res\n    })\n  //   this.service.get(id).subscribe(res=>{\n  //     console.log(res);\n  //    this.agentForm=this.formBuilder.group({\n  //      id:res.id,\n  //      agentType: res.agentType,\n  //      balance:res.balance,\n  //      city: res.city,\n  //      code: res.code,\n  //      contactPerson:res.contactPerson,\n  //      country: res.country,\n  //      currentBalance:res.currentBalance,\n  //      deleted: res.deleted,\n  //      email:res.email,\n  //      loginUrl:res.loginUrl,\n  //      logo: res.logo,\n  //      markupPlanId:res.markupPlanId,\n  //      mobile:res.mobile,\n  //      name: res.name,\n  //      phone:res.phone,\n  //      referredBy: res.referredBy,\n  //      securityCode: res.securityCode,\n  //      smtpPassword:res.smtpPassword,\n  //      smtpPort: res.smtpPort,\n  //      smtpServer:res.smtpServer,\n  //      smtpUsername: res.smtpUsername,\n  //      state: res.state,\n  //      status: res.status,\n  //      street:res.street,\n  //      zip:res.zip\n       \n  //     },error=>{\n  //       console.log(error)\n  //     });\n  // })\n     this.loadMarkupPlans()\n   }\n   loadMarkupPlans(){\n     var r=new BaseRequestModel();\n     r.page=-1;\n     r.orderBy=\"updatedOnUtc\"\n     this.markupPlanService.search(r).subscribe(res=>{\n              this.markupPlans=res;\n              console.log(res)\n     });\n   }\n \n  //  editAgent(){\n  //    this.service.edit(this.agentForm.value).subscribe(res=>{\n  //      this.router.navigate([''])\n  //    },error=>{\n  //      console.log(error);\n  //    })\n  //  }\n   \n\n   \n\n\n\n   }\n ","module.exports = \"\"","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <form>\\n          <table>\\n              <tr>\\n                  \\n                  <td>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"code\\\" [(ngModel)]=\\\"searchRequest.code\\\" (keypress)=\\\"search()\\\" placeholder=\\\"Code\\\">\\n                  </td>\\n                 \\n                   <td>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"searchRequest.name\\\" (keypress)=\\\"search()\\\" placeholder=\\\"Name\\\">\\n                   </td>\\n                   \\n                   <td>\\n                      <select id=\\\"markupPlanName\\\"  name=\\\"markupPlanName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchRequest.markupPlanName\\\">\\n                          <option  selected value=\\\"\\\">All Markup Plan</option>\\n                          <option *ngFor=\\\"let plan of markupPlans\\\" value=\\\"{{plan.markupPlanName}}\\\">{{plan.markupPlanName}}</option>\\n                        </select>\\n                     \\n                   </td>\\n                  <td>\\n                      <button type=\\\"button\\\" (click)=\\\"search()\\\" class=\\\"btn btn-primary\\\" ><i class=\\\"fa fa-search\\\"></i></button>\\n                  </td>\\n              </tr>\\n          </table>\\n        </form>\\n  </div>\\n  <div></div>\\n  <div></div>\\n  <div class=\\\"row\\\">\\n    <table class=\\\"table table-hover\\\">\\n      <thead>\\n       \\n      <tr>\\n        <th (click)=\\\"sort('createdOnUtc')\\\"> JOINED ON<i class=\\\"fa fa-sort\\\"></i></th>\\n        <th (click)=\\\"sort('code')\\\"> CODE</th>\\n        <th (click)=\\\"sort('name')\\\"> NAME</th>\\n        <th (click)=\\\"sort('markupPlanId')\\\"> MarkupPlan</th>\\n        <th (click)=\\\"sort('mobile')\\\"> MOBILE</th>\\n        <th (click)=\\\"sort('email')\\\"> EMAIL</th>\\n        <th (click)=\\\"sort('balance')\\\"> BALANCE</th>\\n        <th>Actions</th>\\n\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let model of models\\\">\\n        <td>{{model.createdOnUtc}}</td>\\n        <td>{{model.code}}</td>\\n        <td>{{model.name}}</td>\\n        <td>{{model.markupPlan.markupPlanName}}</td>\\n        <td>{{model.mobile}}</td>\\n        <td>{{model.email}}</td>\\n        <td>{{model.balance}}</td>\\n        <td> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ><i class=\\\"fa fa-envelope\\\"></i></button></td>\\n        <td> <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"delete(model.id)\\\"><i class=\\\"fa fa-remove\\\"></i></button></td>\\n        <td> <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['/edit-business-entity/',model.id]\\\"><i class=\\\"fa fa-pencil\\\"></i></button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n</div>\\n\\n\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n  <span class=\\\"pagination-info\\\">Showing {{(searchRequest.page-1)*10+1}} to {{(searchRequest.page)*10}} of {{totalCount}} Records</span>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n  \\n<button class=\\\"btn btn-info\\\" (show)=\\\"searchRequest.page>1\\\" (click)=\\\"previous()\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button>\\n<label>Current Page: {{searchRequest.page}} </label>\\n<button class=\\\"btn btn-info\\\" (click)=\\\"next()\\\"><i class=\\\"fa fa-arrow-right\\\"></i></button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BusinessEntityService } from 'src/app/services/business-entity.service';\nimport { BaseComponent } from '../base/base.component';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\nimport { BaseRequestModel } from 'src/app/entities/base-request-model';\n\n@Component({\n  selector: 'app-list-business-entity',\n  templateUrl: './list-business-entity.component.html',\n  styleUrls: ['./list-business-entity.component.css']\n})\nexport class ListBusinessEntityComponent extends BaseComponent<any> implements OnInit {\n\n  reset() {\n    throw new Error(\"Method not implemented.\");\n  }\nmarkupPlans:any[]\n  constructor(service:BusinessEntityService,private markupPlanService:MarkupPlanService) \n  {super(service)\n   }\n\n  ngOnInit() {\n    this.search();\n    this.searchForPaging();\n    this.loadMarkupPlans()\n  }\n\nloadMarkupPlans(){\n  var r=new BaseRequestModel();\n  r.page=-1;\n  r.orderBy=\"updatedOnUtc\"\n  this.markupPlanService.search(r).subscribe(res=>{\n           this.markupPlans=res;\n           console.log(res)\n  });\n}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <div class=\\\"card card-default\\\">\\n          <div class=\\\"card-header\\\">\\n            <h3 class=\\\"card-title\\\">Add New Markup Plan</h3>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">Markup Plan</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"markupPlanName\\\" id=\\\"name\\\" [(ngModel)]=\\\"model.markupPlanName\\\">\\n                    </div>\\n            \\n            <div class=\\\"text-right\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-lg\\\" (click)=\\\"save()\\\">Save</button>\\n            </div>\\n           \\n            <div class=\\\"text-right\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/list-markup-plan']\\\">Back To Markup Plan List</button>\\n              </div>\\n    \\n  \\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../base/base.component';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\nimport { Entity } from 'src/app/entities/entity';\n\n@Component({\n  selector: 'app-add-markup-plan',\n  templateUrl: './add-markup-plan.component.html',\n  styleUrls: ['./add-markup-plan.component.css']\n})\nexport class AddMarkupPlanComponent extends BaseComponent<any> implements OnInit {\n  reset() {\n    this.model=new Entity()\n  }\n\n  constructor(service:MarkupPlanService) { \n    super(service)\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <div class=\\\"card card-default\\\">\\n          <div class=\\\"card-header\\\">\\n            <h3 class=\\\"card-title\\\">Edit Markup Plan</h3>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"markupPlanName\\\">Markup Plan</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"markupPlanName\\\" id=\\\"markupPlanName\\\" [(ngModel)]=\\\"plan.markupPlanName\\\">\\n                    </div>\\n            \\n            <div class=\\\"text-right\\\">\\n             \\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-lg\\\" (click)=\\\"edit()\\\">Update</button>\\n            </div>\\n           \\n            <div class=\\\"text-right\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/list-markup-plan']\\\">Back To Markup Plan List</button>\\n              </div>\\n    \\n  \\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../base/base.component';\nimport { Entity } from 'src/app/entities/entity';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-markup-plan',\n  templateUrl: './edit-markup-plan.component.html',\n  styleUrls: ['./edit-markup-plan.component.css']\n})\nexport class EditMarkupPlanComponent extends BaseComponent<any> implements OnInit {\n  reset() {\n    this.model=new Entity()\n  }\nplan={}\n  constructor(service:MarkupPlanService,private activatedRoute:ActivatedRoute) {\n    super(service)\n   }\n\n  ngOnInit() {\n    this.service.get(this.activatedRoute.snapshot.params.id).subscribe(res=>{\n      console.log(res)\n      this.plan=res\n    })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <form>\\n            <div class=\\\"form-group\\\">\\n               <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"searchRequest.keyword\\\" (keypress)=\\\"search()\\\" placeholder=\\\"Search by Keyword\\\">\\n              \\n            </div>\\n          </form>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <table class=\\\"table table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th (click)=\\\"sort('markupPlanName')\\\">Markup Plan</th>\\n         \\n          <th>Actions</th>\\n\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let model of models\\\">\\n          <td>{{model.markupPlanName}}</td>\\n         \\n          <td> <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" [routerLink]=\\\"['/edit-markup-plan/',model.id]\\\"><i class=\\\"fa fa-pencil\\\"></i></button></td>\\n          <td> <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"delete(model.id)\\\"><i class=\\\"fa fa-remove\\\"></i></button></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n\\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <span class=\\\"pagination-info\\\">Showing {{(searchRequest.page-1)*10+1}} to {{(searchRequest.page)*10}} of {{totalCount}} Records</span>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n    \\n  <button class=\\\"btn btn-info\\\" (show)=\\\"searchRequest.page>1\\\" (click)=\\\"previous()\\\"><i class=\\\"fa fa-arrow-left\\\"></i></button>\\n  <label>Current Page: {{searchRequest.page}} </label>\\n  <button class=\\\"btn btn-info\\\" (click)=\\\"next()\\\"><i class=\\\"fa fa-arrow-right\\\"></i></button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseComponent } from '../../base/base.component';\nimport { MarkupPlanService } from 'src/app/services/markup-plan.service';\n\n@Component({\n  selector: 'app-list-markup-plan',\n  templateUrl: './list-markup-plan.component.html',\n  styleUrls: ['./list-markup-plan.component.css']\n})\nexport class ListMarkupPlanComponent extends BaseComponent<any> implements OnInit {\n  reset() {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  constructor(service:MarkupPlanService) {\n    super(service);\n  }\n\n  ngOnInit() {\n    this.searchForPaging();\n    this.search()\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  sidebar works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>Counter</h1>\\r\\n\\r\\n<p>This is a simple example of an Angular component.</p>\\r\\n\\r\\n<p>Current count: <strong>{{ currentCount }}</strong></p>\\r\\n\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment</button>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","import { Entity } from \"./entity\";\n\nexport class BaseRequestModel extends Entity {\n    orderBy:string\n    isAscending:boolean \n    page:number\n    perPageCount:number\n    totalPage:number\n    totalCount:number\n    code:string\n    name:string\n    marketPlanName:string\n   \n}","export class Entity {\n    createdOnUtc:Date\n    updatedOnUtc:Date\n\n}\n","module.exports = \"<h1>Weather forecast</h1>\\r\\n\\r\\n<p>This component demonstrates fetching data from the server.</p>\\r\\n\\r\\n<p *ngIf=\\\"!forecasts\\\"><em>Loading...</em></p>\\r\\n\\r\\n<table class='table table-striped' *ngIf=\\\"forecasts\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Date</th>\\r\\n      <th>Temp. (C)</th>\\r\\n      <th>Temp. (F)</th>\\r\\n      <th>Summary</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let forecast of forecasts\\\">\\r\\n      <td>{{ forecast.dateFormatted }}</td>\\r\\n      <td>{{ forecast.temperatureC }}</td>\\r\\n      <td>{{ forecast.temperatureF }}</td>\\r\\n      <td>{{ forecast.summary }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'api/SampleData/WeatherForecasts').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  dateFormatted: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","module.exports = \"<h1>Hello, world!</h1>\\r\\n<p>Welcome to your new single-page application, built with:</p>\\r\\n<ul>\\r\\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\\r\\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\\r\\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\\r\\n</ul>\\r\\n<p>To help you get started, we've also set up:</p>\\r\\n<ul>\\r\\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\\r\\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\\r\\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\\r\\n</ul>\\r\\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","module.exports = \"a.navbar-brand {\\r\\n  white-space: normal;\\r\\n  text-align: center;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\nhtml {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n  html {\\r\\n    font-size: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.box-shadow {\\r\\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\\r\\n}\\r\\n\"","module.exports = \"<header>\\r\\n \\r\\n  <nav class='navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3'>\\r\\n      <div class=\\\"container-fluid\\\">\\r\\n\\r\\n          <button type=\\\"button\\\" id=\\\"sidebarCollapse\\\" class=\\\"btn btn-info\\\">\\r\\n              <i class=\\\"fa fa-align-left\\\"></i>\\r\\n              <span></span>\\r\\n          </button>\\r\\n\\r\\n      </div>\\r\\n    <div class=\\\"container\\\">\\r\\n      <a style=\\\"text-align: center;\\\" class=\\\"navbar-brand\\\" [routerLink]='[\\\"/list-business-entity\\\"]'>Agent Management System</a>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-label=\\\"Toggle navigation\\\"\\r\\n        [attr.aria-expanded]=\\\"isExpanded\\\" (click)=\\\"toggle()\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n     \\r\\n    </div>\\r\\n  </nav>\\r\\n  \\r\\n</header>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Entity } from '../entities/entity';\nimport { Observable } from 'rxjs';\nimport { BaseRequestModel } from '../entities/base-request-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService<T> {\n  commandUrl:string\n  \n    constructor(public http:HttpClient,public url:string) {\n      this.commandUrl=url\n     }\n  \n     save(data:Entity):Observable<any>{\n      return  this.http.post(this.commandUrl+'/add',data);\n    }\n    get(id:number):Observable<T>{\n      return this.http.get<T>(this.commandUrl+'/get/'+id);\n      \n    }\n  \n    delete(id:number){\n      return this.http.delete(this.commandUrl+'/delete/'+id);\n      \n    }\n  \n    edit(data:Entity):Observable<any>{\n      return  this.http.put(this.commandUrl+'/edit',data);\n    }\n  \n     search(request:BaseRequestModel):Observable<any>{\n     \n        return this.http.post<any>(this.commandUrl+'/search',request);\n     }\n   \n  }\n  ","import { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { HttpClient } from '@angular/common/http';\nimport { UrlService } from './url.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessEntityService extends BaseService<any> {\n\n  constructor(public http:HttpClient,url:UrlService) {\n    super(http,url.businessEntity)\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseService } from './base.service';\nimport { HttpClient } from '@angular/common/http';\nimport { UrlService } from './url.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkupPlanService extends BaseService<any> {\n\n  constructor(public http:HttpClient,url:UrlService) {\n    super(http,url.markupPlan)\n   }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n  baseUrl:string='http://localhost:8670/api/'\n  businessEntity:string\n  markupPlan:string\n    constructor() { \n      this.businessEntity=this.baseUrl+'business-entity'\n      this.markupPlan=this.baseUrl+'markup-plan'\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}